(()=>{"use strict";var __webpack_modules__={776:()=>{eval('\n;// CONCATENATED MODULE: ./src/config.js\nconst OPENWEATHER_API="495c3ff348c83bce1d05cf49bb674544";\nconst GIPHY_KEY="TPhGGB6YBVIiT4QBveYpJPAy9vpemrwl";\n\n\n;// CONCATENATED MODULE: ./src/apiCalls.js\n\n\n\nasync function fetchCurrentWeather(city = "Toronto") {\n    const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${OPENWEATHER_API}`);\n    const weatherData = await response.json();\n\n    const longitude = weatherData.coord.lon;\n    const latitude = weatherData.coord.lat;\n    const location = weatherData.name;\n\n    fetchCompleteWeather(longitude, latitude, location);\n};\n\nasync function fetchCompleteWeather(long, lat, location) {\n    const exclude = "minutely,alerts"\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=${exclude}&appid=${OPENWEATHER_API}`);\n    const completeData = await response.json();\n\n    const currentWeather = completeData.current;\n    const dailyWeather = completeData.daily;\n    const hourlyWeather = completeData.hourly;\n\n    updateWeather(currentWeather, dailyWeather, hourlyWeather, location);\n}\n\n\n;// CONCATENATED MODULE: ./src/helpers.js\nfunction farenheitToCelsius(temp) {\n    let celsiusTemp = (temp - 32) * 5 / 9;\n    return celsiusTemp\n}\n\nfunction celsiusToFarenheit(temp) {\n    let farenheitTemp = (temp * 9 / 5) + 32;\n    return farenheitTemp\n}\n\nfunction kelvinToCelsius(temp) {\n    let celsiusTemp = temp - 273.15;\n    return celsiusTemp\n}\n\nfunction convertTime(unixTime) {\n    let daysOfWeek = ["Sunday",\n                      "Monday", \n                      "Tuesday", \n                      "Wednesday", \n                      "Thursday", \n                      "Friday", \n                      "Saturday"];\n\n    let date = new Date(unixTime * 1000);\n    let day = daysOfWeek[date.getDay()];\n    let hour = date.getHours();\n    let formattedHour = formatTime(date.getHours());\n\n    let dateTimeData = {\n        day: day,\n        hour: hour,\n        formattedTime: formattedHour\n    }\n\n    return dateTimeData\n}\n\nfunction formatTime(hour) {\n    let abbrev;\n    let newHour;\n\n    if (parseInt(hour) > 12) {\n        newHour = parseInt(hour) - 12;\n        abbrev = "PM";\n    } else {\n        abbrev = "AM";\n    }\n\n    let formattedHour = `${newHour}:00 ${abbrev}`;\n    return formattedHour\n}\n\nfunction determineIcon(weatherCondition, time) {\n    let timeHour = convertTime(time).hour;\n\n    if (timeHour > 20 || timeHour < 6) {\n        return "../images/Icons/night.png"\n    } else if (weatherCondition === "Snow") {\n        return "../images/Icons/snow.png"\n    } else if (weatherCondition === "Rain" || weatherCondition === "Drizzle") {\n        return "../images/Icons/rain.png"\n    } else if (weatherCondition === "Clouds") {\n        return "../images/Icons/clouds.png"\n    } else if (weatherCondition === "Thuderstorm") {\n        return "../images/Icons/thunderstorm.png"\n    } else if (weatherCondition === "Clear") {\n        return "../images/Icons/sun.png"\n    } else {\n        return "../images/Icons/sun.png"\n    }\n}\n\nfunction determineBackground(weatherCondition, time, sunrise, sunset) {\n    let sunriseHour = convertTime(sunrise).hour;\n    let sunsetHour = convertTime(sunset).hour;\n    let timeHour = convertTime(time).hour;\n    console.log(weatherCondition, parseInt(sunriseHour), sunsetHour, timeHour);\n\n    if (weatherCondition === "Snow" && (timeHour > sunsetHour || timeHour < sunriseHour)) {\n        return "../images/snownight.jpeg"\n    } else if (weatherCondition === "Snow" && timeHour > sunriseHour && timeHour < sunsetHour) {\n        return "../images/snow.jpg"\n        // day snow\n    } else if ((weatherCondition === "Rain" || weatherCondition === "Drizzle") && (timeHour > sunsetHour || timeHour < sunriseHour)) {\n        return "../images/rainnight.jpeg"\n        // night rain \n    } else if ((weatherCondition === "Rain" || weatherCondition === "Drizzle") && timeHour > sunriseHour && timeHour < sunsetHour) {\n        // day rain\n        return "../images/rain.jpg"\n    } else if (weatherCondition === "Clouds" && (timeHour > sunsetHour || timeHour < sunriseHour)) {\n        // night clouds\n        return "../images/night.png"\n    } else if (weatherCondition === "Clouds" && timeHour > sunriseHour && timeHour <= sunsetHour) {\n        // day clouds\n        return "../images/cloudy2.jpg"\n    } else if (weatherCondition === "Clear" && (timeHour > sunsetHour || timeHour < sunriseHour)) {\n        // night \n        return "../images/night.jpg"\n    } else if (weatherCondition === "Clear" && timeHour > sunriseHour && timeHour <= 8) {\n        // sunrise\n        return "../images/sunrise.jpg"\n    } else if (weatherCondition === "Clear" && timeHour > 8 && timeHour <= 18) {\n        // day time\n        return "../images/sunny.jpg"\n    } else if (weatherCondition === "Clear" && timeHour > 18 && timeHour < sunsetHour) {\n        // sunset\n        return "../images/sunset.jpg"\n    } else if (weatherCondition === "Thunderstorm") {\n        // thunderstorm\n        return "../images/thunderstorm.jpg"\n    } else {\n        return "../images/cloudy2.jpg"\n    }\n}\n\n\n;// CONCATENATED MODULE: ./src/dom.js\n\n\n\nfunction renderPage() {\n    let body = document.querySelector("body");\n    let container = document.createElement("div");\n    let header = document.createElement("header");\n    let headerTitle = document.createElement("h1");\n    let cityForm = document.createElement("form");\n    let citySearchContainer = document.createElement("div");\n    let citySearchInput = document.createElement("input");\n    let citySearchIcon = document.createElement("img");\n    let weatherInfoBody = document.createElement("div");\n    let weatherInfoContainer = document.createElement("div");\n    let weatherInfoTop = document.createElement("div");\n    let weatherInfoBottom = document.createElement("div");\n    let currentWeatherContainer = document.createElement("div");\n    let dailyWeatherContainer = document.createElement("div");\n    let hourlyWeatherContainer = document.createElement("div");\n\n    container.classList.add("container");\n    headerTitle.classList.add("header-title");\n    cityForm.id = "city-form";\n    citySearchContainer.classList.add("city-search-container");\n    citySearchInput.id = "city-search";\n    weatherInfoBody.classList.add("weather-info");\n    weatherInfoContainer.classList.add("weather-info-container");\n    weatherInfoTop.classList.add("weather-top");\n    weatherInfoBottom.classList.add("weather-bottom");\n    currentWeatherContainer.classList.add("weather-today-container");\n    dailyWeatherContainer.classList.add("weather-daily-container");\n    hourlyWeatherContainer.classList.add("weather-hourly-container");\n\n    // container.style.backgroundImage = determineBackground(current.weather.main, current.dt, current.sunrise, current.sunset);\n    headerTitle.textContent = "Weather App";\n    citySearchInput.type = "text";\n    citySearchIcon.src = "../images/Icons/search.png";\n\n    citySearchContainer.append(citySearchInput, citySearchIcon);\n    cityForm.append(citySearchContainer);\n    header.append(headerTitle, cityForm);\n    weatherInfoTop.append(currentWeatherContainer, dailyWeatherContainer);\n    weatherInfoBottom.append(hourlyWeatherContainer);\n    weatherInfoContainer.append(weatherInfoTop, weatherInfoBottom);\n    weatherInfoBody.append(weatherInfoContainer);\n    container.append(header, weatherInfoBody);\n    body.append(container);\n\n    cityForm.addEventListener(\'submit\', (e) => {\n        e.preventDefault();\n\n        let city = citySearchInput.value.trim();\n        if (city) {\n            fetchCurrentWeather(city);\n            citySearchInput.value = "";\n        }\n    });\n}\n\nfunction renderCurrentWeather(current, city) {\n    let container = document.querySelector(".weather-today-container")\n    let location = document.createElement("p");\n    let icon = document.createElement("img");\n    let currentTemperature = document.createElement("h1");\n    let infoContainer = document.createElement("div");\n    let feelsLikeTemp = document.createElement("p");\n    let humidity = document.createElement("p");\n    let pressure = document.createElement("p");\n\n    location.textContent = city;\n    currentTemperature.textContent = `${current.temp} °C`; // function to convert to C\n    feelsLikeTemp.textContent = `${current.feels_like} °C`; // function to convert to C\n    humidity.textContent = `${current.humidity} %`;\n    pressure.textContent = `${current.pressure} mb`;\n    icon.src = determineIcon(current.weather[0].main, current.dt);\n\n    // container.classList.add("weather-today-container");\n    location.classList.add("city");\n    currentTemperature.classList.add("current-temperature");\n    infoContainer.classList.add("other-info");\n\n    infoContainer.append(feelsLikeTemp, humidity, pressure);\n    container.append(location, icon, currentTemperature, infoContainer);\n}\n\nfunction renderDailyWeather(daily) {\n    let container = document.querySelector(".weather-daily-container");\n    let dailyContainer = document.createElement("div");\n    let day = document.createElement("p");\n    let icon = document.createElement("img");\n    let temperature = document.createElement("h1");\n    let tempRangeContainer = document.createElement("div");\n    let dailyHigh = document.createElement("p");\n    let dailyLow = document.createElement("p");\n\n    day.textContent = convertTime(daily.dt).day; // convert unix to day/time\n    temperature.textContent = `${daily.temp.day} °C`;\n    dailyHigh.textContent = `${daily.temp.max} °C`;\n    dailyLow.textContent = `${daily.temp.min} °C`;\n    icon.src = determineIcon(daily.weather[0].main, daily.dt);\n\n    dailyContainer.classList.add("weather-daily");\n    day.classList.add("day-of-week");\n    temperature.classList.add("daily-temperature");\n    tempRangeContainer.classList.add("daily-range");\n    dailyHigh.classList.add("daily-high");\n    dailyLow.classList.add("daily-low");\n\n    tempRangeContainer.append(dailyHigh, dailyLow);\n    dailyContainer.append(day, icon, temperature, tempRangeContainer);\n    container.append(dailyContainer);\n}\n\nfunction renderHourlyWeather(hourly) {\n    let container = document.querySelector(".weather-hourly-container");\n    let hourlyContainer = document.createElement("div");\n    let icon = document.createElement("img");\n    let temperature = document.createElement("h1");\n    let time = document.createElement("p");\n\n    icon.src = determineIcon(hourly.weather[0].main, hourly.dt)\n    temperature.textContent = `${hourly.temp} °C`;\n    time.textContent = convertTime(hourly.dt).formattedTime;\n\n    hourlyContainer.classList.add("weather-hourly");\n    temperature.classList.add("hourly-temperature");\n    time.classList.add("hourly-time");\n    hourlyContainer.append(icon, temperature, time);\n    container.append(hourlyContainer);\n}\n\nfunction updateBackground(current) {\n    let background = document.querySelector(".container");\n    console.log(current);\n    background.style.backgroundImage = `url(${determineBackground(current.weather[0].main, current.dt, current.sunrise, current.sunset)})`;\n}\n\nfunction updateWeather(current, dailyArr, hourlyArr, city) {\n    let currentContainer = document.querySelector(".weather-today-container");\n    let dailyContainer = document.querySelector(".weather-daily-container");\n    let hourlyContainer = document.querySelector(".weather-hourly-container");\n\n    currentContainer.innerHTML = "";\n    dailyContainer.innerHTML = "";\n    hourlyContainer.innerHTML = "";\n\n    updateBackground(current);\n    renderCurrentWeather(current, city);\n\n    for (let i = 0; i < 5; i++) {\n        renderDailyWeather(dailyArr[i]);\n    }\n\n    for (let i = 0; i < 7; i++) {\n        renderHourlyWeather(hourlyArr[i]);\n    }\n}\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\nrenderPage();\nfetchCurrentWeather();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///776\n')}},__webpack_exports__={};__webpack_modules__[776]()})();